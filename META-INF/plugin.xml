<!--
  ~ Copyright 2011-12 Aman Kumar
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<idea-plugin version="2" url="https://github.com/witspirit/IntelliJBehave">
    <name>JBehave Support</name>
    <id>jbehave-support-plugin</id>
    <description><![CDATA[
    <h1>IntelliJ IDEA Plugin for JBehave</h1>
    <p>
    This plugin provides some support for JBehave. <br/>
    It is a fork of IntelliJBehave, originally created by Aman Kumar. <br/>
    See <a href="https://github.com/kumaraman21/IntelliJBehave/wiki">https://github.com/kumaraman21/IntelliJBehave/wiki</a>
    <br/>

    Most of the original code has been retained, but several improvements have been incorporated by various contributors:
    <ul>
        <li><a href="https://github.com/jarosite">https://github.com/jarosite</a></li>
        <li><a href="https://github.com/Arnauld">https://github.com/Arnauld</a></li>
        <li><a href="https://github.com/harley84">https://github.com/harley84</a></li>
    </ul>
    </p>

    <p>
    The plugin provides the following features:
    </p>
    <ul>
    <li> Basic syntax highlighting for JBehave story files</li>
    <li> Jump to step definition in Java or Groovy</li>
    <li> Error Highlighting in story if step was not defined</li>
    <li> Create new story files from a configurable story template</li>
    <li> Comment/uncomment lines in story files</li>
    <li> Code inspections to report unused steps definitions and undefined step usages </li>
    <li> Run *.story files</li>
    </ul>

    <p>
    Known limitations:
    </p>
    <ul>
        <li>Searches complete module classpath, no configuration available to limit scope</li>
        <li>Does not take into account any custom JBehave configuration</li>
    </ul>
  ]]></description>
    <version>1.2</version>
    <vendor url="https://github.com/witspirit" email="witspirit@gmail.com">Bert Van Vlerken</vendor>

    <idea-version since-build="133.0"/>

    <application-components>
        <component>
            <implementation-class>com.github.kumaraman21.intellijbehave.template.JBehaveTemplateLoaderComponent
            </implementation-class>
        </component>
        <component>
            <implementation-class>com.github.kumaraman21.intellijbehave.settings.JBehaveSettings</implementation-class>
        </component>
        <component>
            <implementation-class>com.github.kumaraman21.intellijbehave.runner.StoryRunnerConfigurationType
            </implementation-class>
        </component>
    </application-components>

    <project-components>
        <!-- Add your project components here -->
    </project-components>

    <actions>
        <action id="IntelliJBehave.NewJBehaveStory"
                class="com.github.kumaraman21.intellijbehave.creator.CreateStoryAction"
                text="JBehave Story" description="Create New JBehave Story">
            <add-to-group group-id="NewGroup1" anchor="after" relative-to-action="NewClass"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt S"/>
        </action>
        <action id="IntelliJBehave.RunJBehaveStory" class="com.github.kumaraman21.intellijbehave.runner.RunStoryAction"
                text="Run Story" description="Run JBehave Story">
            <add-to-group group-id="RunMenu" anchor="first"/>
            <keyboard-shortcut keymap="$default" first-keystroke="alt shift F8"/>
        </action>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <projectConfigurable instance="com.github.kumaraman21.intellijbehave.settings.JBehaveConfigurable"/>
        <fileTypeFactory implementation="com.github.kumaraman21.intellijbehave.language.StoryFileTypeFactory"/>
        <lang.parserDefinition language="Story"
                               implementationClass="com.github.kumaraman21.intellijbehave.parser.StoryParserDefinition"/>
        <annotator language="Story"
                   implementationClass="com.github.kumaraman21.intellijbehave.resolver.StoryAnnotator"/>
        <lang.commenter language="Story"
                        implementationClass="com.github.kumaraman21.intellijbehave.commenter.StoryCommenter"/>
        <colorSettingsPage implementation="com.github.kumaraman21.intellijbehave.highlighter.StoryColorsAndFontsPage"/>
        <completion.contributor language="Story"
                                implementationClass="com.github.kumaraman21.intellijbehave.completion.StoryCompletionContributor"/>

        <!--code inspections-->
        <inspectionToolProvider id="unusedStepsInspection" order="FIRST"
                                implementation="com.github.kumaraman21.intellijbehave.codeInspector.UnusedStepsInspectionProvider"/>
        <inspectionToolProvider id="undefinedStepsInspection" order="LAST"
                                implementation="com.github.kumaraman21.intellijbehave.codeInspector.UndefinedStepsInspectionProvider"/>
    </extensions>
</idea-plugin>